// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        (unknown)
// source: proto/keeper/v1/secrets.proto

package keeperv1

import (
	reflect "reflect"
	sync "sync"

	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SecretType int32

const (
	SecretType_SECRET_TYPE_UNSPECIFIED SecretType = 0
	SecretType_SECRET_TYPE_CREDENTIAL  SecretType = 1
	SecretType_SECRET_TYPE_TEXT        SecretType = 2
	SecretType_SECRET_TYPE_BLOB        SecretType = 3
	SecretType_SECRET_TYPE_CARD        SecretType = 4
)

// Enum value maps for SecretType.
var (
	SecretType_name = map[int32]string{
		0: "SECRET_TYPE_UNSPECIFIED",
		1: "SECRET_TYPE_CREDENTIAL",
		2: "SECRET_TYPE_TEXT",
		3: "SECRET_TYPE_BLOB",
		4: "SECRET_TYPE_CARD",
	}
	SecretType_value = map[string]int32{
		"SECRET_TYPE_UNSPECIFIED": 0,
		"SECRET_TYPE_CREDENTIAL":  1,
		"SECRET_TYPE_TEXT":        2,
		"SECRET_TYPE_BLOB":        3,
		"SECRET_TYPE_CARD":        4,
	}
)

func (x SecretType) Enum() *SecretType {
	p := new(SecretType)
	*p = x
	return p
}

func (x SecretType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SecretType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_keeper_v1_secrets_proto_enumTypes[0].Descriptor()
}

func (SecretType) Type() protoreflect.EnumType {
	return &file_proto_keeper_v1_secrets_proto_enumTypes[0]
}

func (x SecretType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SecretType.Descriptor instead.
func (SecretType) EnumDescriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{0}
}

type PreviewType int32

const (
	PreviewType_PREVIEW_TYPE_UNSPECIFIED PreviewType = 0
	PreviewType_PREVIEW_TYPE_NEW         PreviewType = 1
	PreviewType_PREVIEW_TYPE_UPDATED     PreviewType = 2
)

// Enum value maps for PreviewType.
var (
	PreviewType_name = map[int32]string{
		0: "PREVIEW_TYPE_UNSPECIFIED",
		1: "PREVIEW_TYPE_NEW",
		2: "PREVIEW_TYPE_UPDATED",
	}
	PreviewType_value = map[string]int32{
		"PREVIEW_TYPE_UNSPECIFIED": 0,
		"PREVIEW_TYPE_NEW":         1,
		"PREVIEW_TYPE_UPDATED":     2,
	}
)

func (x PreviewType) Enum() *PreviewType {
	p := new(PreviewType)
	*p = x
	return p
}

func (x PreviewType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PreviewType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_keeper_v1_secrets_proto_enumTypes[1].Descriptor()
}

func (PreviewType) Type() protoreflect.EnumType {
	return &file_proto_keeper_v1_secrets_proto_enumTypes[1]
}

func (x PreviewType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PreviewType.Descriptor instead.
func (PreviewType) EnumDescriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{1}
}

type Secret struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Metadata  string                 `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Type      SecretType             `protobuf:"varint,5,opt,name=type,proto3,enum=proto.keeper.v1.SecretType" json:"type,omitempty"`
	// Types that are assignable to Content:
	//
	//	*Secret_Credential
	//	*Secret_Text
	//	*Secret_Blob
	//	*Secret_Card
	Content isSecret_Content `protobuf_oneof:"content"`
}

func (x *Secret) Reset() {
	*x = Secret{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Secret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Secret) ProtoMessage() {}

func (x *Secret) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Secret.ProtoReflect.Descriptor instead.
func (*Secret) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{0}
}

func (x *Secret) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Secret) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Secret) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Secret) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *Secret) GetType() SecretType {
	if x != nil {
		return x.Type
	}
	return SecretType_SECRET_TYPE_UNSPECIFIED
}

func (m *Secret) GetContent() isSecret_Content {
	if m != nil {
		return m.Content
	}
	return nil
}

func (x *Secret) GetCredential() *Credential {
	if x, ok := x.GetContent().(*Secret_Credential); ok {
		return x.Credential
	}
	return nil
}

func (x *Secret) GetText() *Text {
	if x, ok := x.GetContent().(*Secret_Text); ok {
		return x.Text
	}
	return nil
}

func (x *Secret) GetBlob() *Blob {
	if x, ok := x.GetContent().(*Secret_Blob); ok {
		return x.Blob
	}
	return nil
}

func (x *Secret) GetCard() *Card {
	if x, ok := x.GetContent().(*Secret_Card); ok {
		return x.Card
	}
	return nil
}

type isSecret_Content interface {
	isSecret_Content()
}

type Secret_Credential struct {
	Credential *Credential `protobuf:"bytes,6,opt,name=credential,proto3,oneof"`
}

type Secret_Text struct {
	Text *Text `protobuf:"bytes,7,opt,name=text,proto3,oneof"`
}

type Secret_Blob struct {
	Blob *Blob `protobuf:"bytes,8,opt,name=blob,proto3,oneof"`
}

type Secret_Card struct {
	Card *Card `protobuf:"bytes,9,opt,name=card,proto3,oneof"`
}

func (*Secret_Credential) isSecret_Content() {}

func (*Secret_Text) isSecret_Content() {}

func (*Secret_Blob) isSecret_Content() {}

func (*Secret_Card) isSecret_Content() {}

type Credential struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Login    string `protobuf:"bytes,1,opt,name=login,proto3" json:"login,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *Credential) Reset() {
	*x = Credential{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Credential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Credential) ProtoMessage() {}

func (x *Credential) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Credential.ProtoReflect.Descriptor instead.
func (*Credential) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{1}
}

func (x *Credential) GetLogin() string {
	if x != nil {
		return x.Login
	}
	return ""
}

func (x *Credential) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type Text struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *Text) Reset() {
	*x = Text{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Text) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Text) ProtoMessage() {}

func (x *Text) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Text.ProtoReflect.Descriptor instead.
func (*Text) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{2}
}

func (x *Text) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Blob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileName string `protobuf:"bytes,1,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	IsDone   bool   `protobuf:"varint,2,opt,name=is_done,json=isDone,proto3" json:"is_done,omitempty"`
}

func (x *Blob) Reset() {
	*x = Blob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Blob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Blob) ProtoMessage() {}

func (x *Blob) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Blob.ProtoReflect.Descriptor instead.
func (*Blob) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{3}
}

func (x *Blob) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *Blob) GetIsDone() bool {
	if x != nil {
		return x.IsDone
	}
	return false
}

type Card struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number   string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	ExpYear  uint32 `protobuf:"varint,2,opt,name=exp_year,json=expYear,proto3" json:"exp_year,omitempty"`
	ExpMonth uint32 `protobuf:"varint,3,opt,name=exp_month,json=expMonth,proto3" json:"exp_month,omitempty"`
	Cvv      uint32 `protobuf:"varint,4,opt,name=cvv,proto3" json:"cvv,omitempty"`
}

func (x *Card) Reset() {
	*x = Card{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Card) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Card) ProtoMessage() {}

func (x *Card) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Card.ProtoReflect.Descriptor instead.
func (*Card) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{4}
}

func (x *Card) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *Card) GetExpYear() uint32 {
	if x != nil {
		return x.ExpYear
	}
	return 0
}

func (x *Card) GetExpMonth() uint32 {
	if x != nil {
		return x.ExpMonth
	}
	return 0
}

func (x *Card) GetCvv() uint32 {
	if x != nil {
		return x.Cvv
	}
	return 0
}

type SecretPreview struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        uint64                 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Metadata  string                 `protobuf:"bytes,4,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Type      SecretType             `protobuf:"varint,5,opt,name=type,proto3,enum=proto.keeper.v1.SecretType" json:"type,omitempty"`
}

func (x *SecretPreview) Reset() {
	*x = SecretPreview{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretPreview) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretPreview) ProtoMessage() {}

func (x *SecretPreview) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretPreview.ProtoReflect.Descriptor instead.
func (*SecretPreview) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{5}
}

func (x *SecretPreview) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *SecretPreview) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *SecretPreview) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *SecretPreview) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *SecretPreview) GetType() SecretType {
	if x != nil {
		return x.Type
	}
	return SecretType_SECRET_TYPE_UNSPECIFIED
}

type SecretPreviewsV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Previews []*SecretPreview `protobuf:"bytes,1,rep,name=previews,proto3" json:"previews,omitempty"`
}

func (x *SecretPreviewsV1Response) Reset() {
	*x = SecretPreviewsV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SecretPreviewsV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SecretPreviewsV1Response) ProtoMessage() {}

func (x *SecretPreviewsV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SecretPreviewsV1Response.ProtoReflect.Descriptor instead.
func (*SecretPreviewsV1Response) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{6}
}

func (x *SecretPreviewsV1Response) GetPreviews() []*SecretPreview {
	if x != nil {
		return x.Previews
	}
	return nil
}

type SaveUserSecretV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterPassword string  `protobuf:"bytes,1,opt,name=master_password,json=masterPassword,proto3" json:"master_password,omitempty"`
	Secret         *Secret `protobuf:"bytes,2,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *SaveUserSecretV1Request) Reset() {
	*x = SaveUserSecretV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SaveUserSecretV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveUserSecretV1Request) ProtoMessage() {}

func (x *SaveUserSecretV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveUserSecretV1Request.ProtoReflect.Descriptor instead.
func (*SaveUserSecretV1Request) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{7}
}

func (x *SaveUserSecretV1Request) GetMasterPassword() string {
	if x != nil {
		return x.MasterPassword
	}
	return ""
}

func (x *SaveUserSecretV1Request) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type GetUserSecretV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MasterPassword string `protobuf:"bytes,1,opt,name=master_password,json=masterPassword,proto3" json:"master_password,omitempty"`
	Id             uint64 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GetUserSecretV1Request) Reset() {
	*x = GetUserSecretV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSecretV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSecretV1Request) ProtoMessage() {}

func (x *GetUserSecretV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSecretV1Request.ProtoReflect.Descriptor instead.
func (*GetUserSecretV1Request) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{8}
}

func (x *GetUserSecretV1Request) GetMasterPassword() string {
	if x != nil {
		return x.MasterPassword
	}
	return ""
}

func (x *GetUserSecretV1Request) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetUserSecretV1Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret *Secret `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *GetUserSecretV1Response) Reset() {
	*x = GetUserSecretV1Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetUserSecretV1Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserSecretV1Response) ProtoMessage() {}

func (x *GetUserSecretV1Response) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserSecretV1Response.ProtoReflect.Descriptor instead.
func (*GetUserSecretV1Response) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{9}
}

func (x *GetUserSecretV1Response) GetSecret() *Secret {
	if x != nil {
		return x.Secret
	}
	return nil
}

type UploadFileV1Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Metadata       string `protobuf:"bytes,1,opt,name=metadata,proto3" json:"metadata,omitempty"`
	FileName       string `protobuf:"bytes,2,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	MasterPassword string `protobuf:"bytes,3,opt,name=master_password,json=masterPassword,proto3" json:"master_password,omitempty"`
	Chunk          []byte `protobuf:"bytes,4,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *UploadFileV1Request) Reset() {
	*x = UploadFileV1Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_keeper_v1_secrets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadFileV1Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileV1Request) ProtoMessage() {}

func (x *UploadFileV1Request) ProtoReflect() protoreflect.Message {
	mi := &file_proto_keeper_v1_secrets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileV1Request.ProtoReflect.Descriptor instead.
func (*UploadFileV1Request) Descriptor() ([]byte, []int) {
	return file_proto_keeper_v1_secrets_proto_rawDescGZIP(), []int{10}
}

func (x *UploadFileV1Request) GetMetadata() string {
	if x != nil {
		return x.Metadata
	}
	return ""
}

func (x *UploadFileV1Request) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *UploadFileV1Request) GetMasterPassword() string {
	if x != nil {
		return x.MasterPassword
	}
	return ""
}

func (x *UploadFileV1Request) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

var File_proto_keeper_v1_secrets_proto protoreflect.FileDescriptor

var file_proto_keeper_v1_secrets_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x76,
	0x31, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xac, 0x03, 0x0a, 0x06,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3d, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x62, 0x6c, 0x6f, 0x62, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70,
	0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x48, 0x00, 0x52, 0x04, 0x62, 0x6c,
	0x6f, 0x62, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x42,
	0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x54, 0x0a, 0x0a, 0x43, 0x72,
	0x65, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x12, 0x1f, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x05,
	0x18, 0x64, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06,
	0x72, 0x04, 0x10, 0x05, 0x18, 0x64, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64,
	0x22, 0x23, 0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x45, 0x0a, 0x04, 0x42, 0x6c, 0x6f, 0x62, 0x12, 0x24, 0x0a,
	0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x44, 0x6f, 0x6e, 0x65, 0x22, 0x95, 0x01, 0x0a,
	0x04, 0x43, 0x61, 0x72, 0x64, 0x12, 0x21, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x09, 0xba, 0x48, 0x06, 0x72, 0x04, 0x10, 0x08, 0x18, 0x13,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x24, 0x0a, 0x08, 0x65, 0x78, 0x70, 0x5f,
	0x79, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x42, 0x09, 0xba, 0x48, 0x06, 0x2a,
	0x04, 0x18, 0x63, 0x20, 0x01, 0x52, 0x07, 0x65, 0x78, 0x70, 0x59, 0x65, 0x61, 0x72, 0x12, 0x26,
	0x0a, 0x09, 0x65, 0x78, 0x70, 0x5f, 0x6d, 0x6f, 0x6e, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0d, 0x42, 0x09, 0xba, 0x48, 0x06, 0x2a, 0x04, 0x18, 0x0c, 0x20, 0x01, 0x52, 0x08, 0x65, 0x78,
	0x70, 0x4d, 0x6f, 0x6e, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x03, 0x63, 0x76, 0x76, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x42, 0x0a, 0xba, 0x48, 0x07, 0x2a, 0x05, 0x18, 0xe7, 0x07, 0x20, 0x64, 0x52,
	0x03, 0x63, 0x76, 0x76, 0x22, 0xe2, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1a, 0x0a, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x56, 0x0a, 0x18, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x56, 0x31, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x08, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x73, 0x22, 0x7c, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63,
	0x72, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0f,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e,
	0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x2f,
	0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22,
	0x5a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x0f, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xba, 0x48, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0e, 0x6d, 0x61, 0x73,
	0x74, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4a, 0x0a, 0x17, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b,
	0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52,
	0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x22, 0x8d, 0x01, 0x0a, 0x13, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x46, 0x69, 0x6c, 0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x6d, 0x61, 0x73, 0x74,
	0x65, 0x72, 0x5f, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x6d, 0x61, 0x73, 0x74, 0x65, 0x72, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x2a, 0x87, 0x01, 0x0a, 0x0a, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x52, 0x45, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x41, 0x4c, 0x10, 0x01, 0x12,
	0x14, 0x0a, 0x10, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x54,
	0x45, 0x58, 0x54, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x53, 0x45, 0x43, 0x52, 0x45, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x42, 0x10, 0x03, 0x12, 0x14, 0x0a, 0x10, 0x53,
	0x45, 0x43, 0x52, 0x45, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10,
	0x04, 0x2a, 0x5b, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e,
	0x45, 0x57, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x02, 0x32, 0xf3,
	0x02, 0x0a, 0x0e, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x55, 0x0a, 0x10, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x73, 0x56, 0x31, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x56, 0x31,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x10, 0x53, 0x61, 0x76, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x31, 0x12, 0x28, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x31, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x64,
	0x0a, 0x0f, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56,
	0x31, 0x12, 0x27, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x56, 0x31, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0c, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69,
	0x6c, 0x65, 0x56, 0x31, 0x12, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65,
	0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x46, 0x69, 0x6c,
	0x65, 0x56, 0x31, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70,
	0x74, 0x79, 0x28, 0x01, 0x42, 0x9b, 0x01, 0x0a, 0x13, 0x63, 0x6f, 0x6d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x2e, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x76, 0x31, 0x42, 0x0c, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x18, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2f, 0x6b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2f, 0x76, 0x31, 0x3b, 0x6b, 0x65,
	0x65, 0x70, 0x65, 0x72, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x50, 0x4b, 0x58, 0xaa, 0x02, 0x0f, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x4b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x2e, 0x56, 0x31, 0xca, 0x02,
	0x0f, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x4b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x5c, 0x56, 0x31,
	0xe2, 0x02, 0x1b, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x5c, 0x4b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x5c,
	0x56, 0x31, 0x5c, 0x47, 0x50, 0x42, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0xea, 0x02,
	0x11, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x3a, 0x3a, 0x4b, 0x65, 0x65, 0x70, 0x65, 0x72, 0x3a, 0x3a,
	0x56, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_keeper_v1_secrets_proto_rawDescOnce sync.Once
	file_proto_keeper_v1_secrets_proto_rawDescData = file_proto_keeper_v1_secrets_proto_rawDesc
)

func file_proto_keeper_v1_secrets_proto_rawDescGZIP() []byte {
	file_proto_keeper_v1_secrets_proto_rawDescOnce.Do(func() {
		file_proto_keeper_v1_secrets_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_keeper_v1_secrets_proto_rawDescData)
	})
	return file_proto_keeper_v1_secrets_proto_rawDescData
}

var file_proto_keeper_v1_secrets_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_keeper_v1_secrets_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_proto_keeper_v1_secrets_proto_goTypes = []any{
	(SecretType)(0),                  // 0: proto.keeper.v1.SecretType
	(PreviewType)(0),                 // 1: proto.keeper.v1.PreviewType
	(*Secret)(nil),                   // 2: proto.keeper.v1.Secret
	(*Credential)(nil),               // 3: proto.keeper.v1.Credential
	(*Text)(nil),                     // 4: proto.keeper.v1.Text
	(*Blob)(nil),                     // 5: proto.keeper.v1.Blob
	(*Card)(nil),                     // 6: proto.keeper.v1.Card
	(*SecretPreview)(nil),            // 7: proto.keeper.v1.SecretPreview
	(*SecretPreviewsV1Response)(nil), // 8: proto.keeper.v1.SecretPreviewsV1Response
	(*SaveUserSecretV1Request)(nil),  // 9: proto.keeper.v1.SaveUserSecretV1Request
	(*GetUserSecretV1Request)(nil),   // 10: proto.keeper.v1.GetUserSecretV1Request
	(*GetUserSecretV1Response)(nil),  // 11: proto.keeper.v1.GetUserSecretV1Response
	(*UploadFileV1Request)(nil),      // 12: proto.keeper.v1.UploadFileV1Request
	(*timestamppb.Timestamp)(nil),    // 13: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),            // 14: google.protobuf.Empty
}
var file_proto_keeper_v1_secrets_proto_depIdxs = []int32{
	13, // 0: proto.keeper.v1.Secret.created_at:type_name -> google.protobuf.Timestamp
	13, // 1: proto.keeper.v1.Secret.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: proto.keeper.v1.Secret.type:type_name -> proto.keeper.v1.SecretType
	3,  // 3: proto.keeper.v1.Secret.credential:type_name -> proto.keeper.v1.Credential
	4,  // 4: proto.keeper.v1.Secret.text:type_name -> proto.keeper.v1.Text
	5,  // 5: proto.keeper.v1.Secret.blob:type_name -> proto.keeper.v1.Blob
	6,  // 6: proto.keeper.v1.Secret.card:type_name -> proto.keeper.v1.Card
	13, // 7: proto.keeper.v1.SecretPreview.created_at:type_name -> google.protobuf.Timestamp
	13, // 8: proto.keeper.v1.SecretPreview.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 9: proto.keeper.v1.SecretPreview.type:type_name -> proto.keeper.v1.SecretType
	7,  // 10: proto.keeper.v1.SecretPreviewsV1Response.previews:type_name -> proto.keeper.v1.SecretPreview
	2,  // 11: proto.keeper.v1.SaveUserSecretV1Request.secret:type_name -> proto.keeper.v1.Secret
	2,  // 12: proto.keeper.v1.GetUserSecretV1Response.secret:type_name -> proto.keeper.v1.Secret
	14, // 13: proto.keeper.v1.SecretsService.SecretPreviewsV1:input_type -> google.protobuf.Empty
	9,  // 14: proto.keeper.v1.SecretsService.SaveUserSecretV1:input_type -> proto.keeper.v1.SaveUserSecretV1Request
	10, // 15: proto.keeper.v1.SecretsService.GetUserSecretV1:input_type -> proto.keeper.v1.GetUserSecretV1Request
	12, // 16: proto.keeper.v1.SecretsService.UploadFileV1:input_type -> proto.keeper.v1.UploadFileV1Request
	8,  // 17: proto.keeper.v1.SecretsService.SecretPreviewsV1:output_type -> proto.keeper.v1.SecretPreviewsV1Response
	14, // 18: proto.keeper.v1.SecretsService.SaveUserSecretV1:output_type -> google.protobuf.Empty
	11, // 19: proto.keeper.v1.SecretsService.GetUserSecretV1:output_type -> proto.keeper.v1.GetUserSecretV1Response
	14, // 20: proto.keeper.v1.SecretsService.UploadFileV1:output_type -> google.protobuf.Empty
	17, // [17:21] is the sub-list for method output_type
	13, // [13:17] is the sub-list for method input_type
	13, // [13:13] is the sub-list for extension type_name
	13, // [13:13] is the sub-list for extension extendee
	0,  // [0:13] is the sub-list for field type_name
}

func init() { file_proto_keeper_v1_secrets_proto_init() }
func file_proto_keeper_v1_secrets_proto_init() {
	if File_proto_keeper_v1_secrets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_keeper_v1_secrets_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*Secret); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*Credential); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*Text); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Blob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*Card); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*SecretPreview); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*SecretPreviewsV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*SaveUserSecretV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSecretV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*GetUserSecretV1Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_keeper_v1_secrets_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*UploadFileV1Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_proto_keeper_v1_secrets_proto_msgTypes[0].OneofWrappers = []any{
		(*Secret_Credential)(nil),
		(*Secret_Text)(nil),
		(*Secret_Blob)(nil),
		(*Secret_Card)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_keeper_v1_secrets_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_keeper_v1_secrets_proto_goTypes,
		DependencyIndexes: file_proto_keeper_v1_secrets_proto_depIdxs,
		EnumInfos:         file_proto_keeper_v1_secrets_proto_enumTypes,
		MessageInfos:      file_proto_keeper_v1_secrets_proto_msgTypes,
	}.Build()
	File_proto_keeper_v1_secrets_proto = out.File
	file_proto_keeper_v1_secrets_proto_rawDesc = nil
	file_proto_keeper_v1_secrets_proto_goTypes = nil
	file_proto_keeper_v1_secrets_proto_depIdxs = nil
}
